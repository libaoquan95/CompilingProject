_offset_QueueItem_0:
	BeginFunc 4 ;
	_tmp0 = 0 ;
	Return _tmp0 ;
	EndFunc ;
VTable QueueItem =
	_offset_QueueItem_0,
	f_QueueItem.Init,
	f_QueueItem.GetData,
	f_QueueItem.GetNext,
	f_QueueItem.GetPrev,
	f_QueueItem.SetNext,
	f_QueueItem.SetPrev,
; 
f_QueueItem.Init:
	BeginFunc 100 ;
	_tmp1 = 4 ;
	_tmp2 = this + _tmp1 ;
	_tmp3 = *(_tmp2) ;
	_tmp4 = 4 ;
	_tmp5 = this + _tmp4 ;
	*(_tmp5) = data ;
	_tmp6 = 8 ;
	_tmp7 = this + _tmp6 ;
	_tmp8 = *(_tmp7) ;
	_tmp9 = 8 ;
	_tmp10 = this + _tmp9 ;
	*(_tmp10) = next ;
	_tmp11 = 12 ;
	_tmp12 = next + _tmp11 ;
	_tmp13 = *(_tmp12) ;
	_tmp14 = 12 ;
	_tmp15 = next + _tmp14 ;
	*(_tmp15) = this ;
	_tmp16 = 12 ;
	_tmp17 = this + _tmp16 ;
	_tmp18 = *(_tmp17) ;
	_tmp19 = 12 ;
	_tmp20 = this + _tmp19 ;
	*(_tmp20) = prev ;
	_tmp21 = 8 ;
	_tmp22 = prev + _tmp21 ;
	_tmp23 = *(_tmp22) ;
	_tmp24 = 8 ;
	_tmp25 = prev + _tmp24 ;
	*(_tmp25) = this ;
	EndFunc ;
f_QueueItem.GetData:
	BeginFunc 12 ;
	_tmp26 = 4 ;
	_tmp27 = this + _tmp26 ;
	_tmp28 = *(_tmp27) ;
	Return _tmp28 ;
	EndFunc ;
f_QueueItem.GetNext:
	BeginFunc 12 ;
	_tmp29 = 8 ;
	_tmp30 = this + _tmp29 ;
	_tmp31 = *(_tmp30) ;
	Return _tmp31 ;
	EndFunc ;
f_QueueItem.GetPrev:
	BeginFunc 12 ;
	_tmp32 = 12 ;
	_tmp33 = this + _tmp32 ;
	_tmp34 = *(_tmp33) ;
	Return _tmp34 ;
	EndFunc ;
f_QueueItem.SetNext:
	BeginFunc 20 ;
	_tmp35 = 8 ;
	_tmp36 = this + _tmp35 ;
	_tmp37 = *(_tmp36) ;
	_tmp38 = 8 ;
	_tmp39 = this + _tmp38 ;
	*(_tmp39) = n ;
	EndFunc ;
f_QueueItem.SetPrev:
	BeginFunc 20 ;
	_tmp40 = 12 ;
	_tmp41 = this + _tmp40 ;
	_tmp42 = *(_tmp41) ;
	_tmp43 = 12 ;
	_tmp44 = this + _tmp43 ;
	*(_tmp44) = p ;
	EndFunc ;
_offset_Queue_0:
	BeginFunc 4 ;
	_tmp45 = 0 ;
	Return _tmp45 ;
	EndFunc ;
VTable Queue =
	_offset_Queue_0,
	f_Queue.Init,
	f_Queue.EnQueue,
	f_Queue.DeQueue,
; 
f_Queue.Init:
	BeginFunc 96 ;
	_tmp46 = 4 ;
	_tmp47 = this + _tmp46 ;
	_tmp48 = *(_tmp47) ;
	_tmp49 = 16 ;
	PushParam _tmp49 ;
	_tmp50 = LCall _Alloc ;
	PopParams 4 ;
	_tmp51 = QueueItem ;
	*(_tmp50) = _tmp51 ;
	_tmp52 = 4 ;
	_tmp53 = this + _tmp52 ;
	*(_tmp53) = _tmp50 ;
	_tmp54 = 4 ;
	_tmp55 = this + _tmp54 ;
	_tmp56 = *(_tmp55) ;
	_tmp57 = 4 ;
	_tmp58 = this + _tmp57 ;
	_tmp59 = *(_tmp58) ;
	PushParam _tmp59 ;
	_tmp60 = 4 ;
	_tmp61 = this + _tmp60 ;
	_tmp62 = *(_tmp61) ;
	PushParam _tmp62 ;
	_tmp63 = 0 ;
	PushParam _tmp63 ;
	_tmp64 = *(_tmp56) ;
	_tmp65 = *(_tmp64) ;
	_tmp66 = ACall _tmp65 ;
	_tmp67 = _tmp56 - _tmp66 ;
	_tmp68 = *(_tmp64 + 4) ;
	PushParam _tmp67 ;
	ACall _tmp68 ;
	_tmp69 = 0 ;
	PopParams 16 ;
	EndFunc ;
f_Queue.EnQueue:
	BeginFunc 88 ;
	_tmp70 = 16 ;
	PushParam _tmp70 ;
	_tmp71 = LCall _Alloc ;
	PopParams 4 ;
	_tmp72 = QueueItem ;
	*(_tmp71) = _tmp72 ;
	temp = _tmp71 ;
	_tmp73 = 4 ;
	_tmp74 = this + _tmp73 ;
	_tmp75 = *(_tmp74) ;
	PushParam _tmp75 ;
	_tmp76 = 4 ;
	_tmp77 = this + _tmp76 ;
	_tmp78 = *(_tmp77) ;
	_tmp79 = *(_tmp78) ;
	_tmp80 = *(_tmp79) ;
	_tmp81 = ACall _tmp80 ;
	_tmp82 = _tmp78 - _tmp81 ;
	_tmp83 = *(_tmp79 + 12) ;
	PushParam _tmp82 ;
	_tmp84 = ACall _tmp83 ;
	PopParams 4 ;
	PushParam _tmp84 ;
	PushParam i ;
	_tmp85 = *(temp) ;
	_tmp86 = *(_tmp85) ;
	_tmp87 = ACall _tmp86 ;
	_tmp88 = temp - _tmp87 ;
	_tmp89 = *(_tmp85 + 4) ;
	PushParam _tmp88 ;
	ACall _tmp89 ;
	_tmp90 = 0 ;
	PopParams 16 ;
	EndFunc ;
f_Queue.DeQueue:
	BeginFunc 272 ;
	_tmp91 = 4 ;
	_tmp92 = this + _tmp91 ;
	_tmp93 = *(_tmp92) ;
	_tmp94 = *(_tmp93) ;
	_tmp95 = *(_tmp94) ;
	_tmp96 = ACall _tmp95 ;
	_tmp97 = _tmp93 - _tmp96 ;
	_tmp98 = *(_tmp94 + 16) ;
	PushParam _tmp97 ;
	_tmp99 = ACall _tmp98 ;
	PopParams 4 ;
	_tmp100 = 4 ;
	_tmp101 = this + _tmp100 ;
	_tmp102 = *(_tmp101) ;
	_tmp103 = _tmp99 == _tmp102 ;
	IfZ _tmp103 Goto _L1 ;
	_tmp104 = "Queue Is Empty" ;
	PushParam _tmp104 ;
	LCall _PrintString ;
	PopParams 4 ;
	_tmp105 = 0 ;
	Return _tmp105 ;
	Goto _L0 ;
_L1:
	_tmp106 = 4 ;
	_tmp107 = this + _tmp106 ;
	_tmp108 = *(_tmp107) ;
	_tmp109 = *(_tmp108) ;
	_tmp110 = *(_tmp109) ;
	_tmp111 = ACall _tmp110 ;
	_tmp112 = _tmp108 - _tmp111 ;
	_tmp113 = *(_tmp109 + 16) ;
	PushParam _tmp112 ;
	_tmp114 = ACall _tmp113 ;
	PopParams 4 ;
	temp = _tmp114 ;
	_tmp115 = *(temp) ;
	_tmp116 = *(_tmp115) ;
	_tmp117 = ACall _tmp116 ;
	_tmp118 = temp - _tmp117 ;
	_tmp119 = *(_tmp115 + 8) ;
	PushParam _tmp118 ;
	_tmp120 = ACall _tmp119 ;
	PopParams 4 ;
	val = _tmp120 ;
	_tmp121 = *(temp) ;
	_tmp122 = *(_tmp121) ;
	_tmp123 = ACall _tmp122 ;
	_tmp124 = temp - _tmp123 ;
	_tmp125 = *(_tmp121 + 16) ;
	PushParam _tmp124 ;
	_tmp126 = ACall _tmp125 ;
	PopParams 4 ;
	_tmp127 = *(temp) ;
	_tmp128 = *(_tmp127) ;
	_tmp129 = ACall _tmp128 ;
	_tmp130 = temp - _tmp129 ;
	_tmp131 = *(_tmp127 + 12) ;
	PushParam _tmp130 ;
	_tmp132 = ACall _tmp131 ;
	PopParams 4 ;
	PushParam _tmp132 ;
	_tmp133 = *(_tmp126) ;
	_tmp134 = *(_tmp133) ;
	_tmp135 = ACall _tmp134 ;
	_tmp136 = _tmp126 - _tmp135 ;
	_tmp137 = *(_tmp133 + 20) ;
	PushParam _tmp136 ;
	ACall _tmp137 ;
	_tmp138 = 0 ;
	PopParams 8 ;
	_tmp139 = *(temp) ;
	_tmp140 = *(_tmp139) ;
	_tmp141 = ACall _tmp140 ;
	_tmp142 = temp - _tmp141 ;
	_tmp143 = *(_tmp139 + 12) ;
	PushParam _tmp142 ;
	_tmp144 = ACall _tmp143 ;
	PopParams 4 ;
	_tmp145 = *(temp) ;
	_tmp146 = *(_tmp145) ;
	_tmp147 = ACall _tmp146 ;
	_tmp148 = temp - _tmp147 ;
	_tmp149 = *(_tmp145 + 16) ;
	PushParam _tmp148 ;
	_tmp150 = ACall _tmp149 ;
	PopParams 4 ;
	PushParam _tmp150 ;
	_tmp151 = *(_tmp144) ;
	_tmp152 = *(_tmp151) ;
	_tmp153 = ACall _tmp152 ;
	_tmp154 = _tmp144 - _tmp153 ;
	_tmp155 = *(_tmp151 + 24) ;
	PushParam _tmp154 ;
	ACall _tmp155 ;
	_tmp156 = 0 ;
	PopParams 8 ;
_L0:
	Return val ;
	EndFunc ;
_offset_main_0:
	BeginFunc 4 ;
	_tmp157 = 0 ;
	Return _tmp157 ;
	EndFunc ;
f_main:
main:
	BeginFunc 268 ;
	_tmp158 = 8 ;
	PushParam _tmp158 ;
	_tmp159 = LCall _Alloc ;
	PopParams 4 ;
	_tmp160 = Queue ;
	*(_tmp159) = _tmp160 ;
	q = _tmp159 ;
	_tmp161 = *(q) ;
	_tmp162 = *(_tmp161) ;
	_tmp163 = ACall _tmp162 ;
	_tmp164 = q - _tmp163 ;
	_tmp165 = *(_tmp161 + 4) ;
	PushParam _tmp164 ;
	ACall _tmp165 ;
	_tmp166 = 0 ;
	PopParams 4 ;
	_tmp167 = 0 ;
	i = _tmp167 ;
_L2:
	_tmp168 = 10 ;
	_tmp169 = 0 ;
	_tmp170 = i == _tmp168 ;
	_tmp171 = _tmp170 == _tmp169 ;
	IfZ _tmp171 Goto _L3 ;
	PushParam i ;
	_tmp172 = *(q) ;
	_tmp173 = *(_tmp172) ;
	_tmp174 = ACall _tmp173 ;
	_tmp175 = q - _tmp174 ;
	_tmp176 = *(_tmp172 + 8) ;
	PushParam _tmp175 ;
	ACall _tmp176 ;
	_tmp177 = 0 ;
	PopParams 8 ;
	_tmp178 = 1 ;
	_tmp179 = i + _tmp178 ;
	i = _tmp179 ;
	Goto _L2 ;
_L3:
	_tmp180 = 0 ;
	i = _tmp180 ;
_L4:
	_tmp181 = 4 ;
	_tmp182 = 0 ;
	_tmp183 = i == _tmp181 ;
	_tmp184 = _tmp183 == _tmp182 ;
	IfZ _tmp184 Goto _L5 ;
	_tmp185 = *(q) ;
	_tmp186 = *(_tmp185) ;
	_tmp187 = ACall _tmp186 ;
	_tmp188 = q - _tmp187 ;
	_tmp189 = *(_tmp185 + 12) ;
	PushParam _tmp188 ;
	_tmp190 = ACall _tmp189 ;
	PopParams 4 ;
	PushParam _tmp190 ;
	LCall _PrintInt ;
	PopParams 4 ;
	_tmp191 = " " ;
	PushParam _tmp191 ;
	LCall _PrintString ;
	PopParams 4 ;
	_tmp192 = 1 ;
	_tmp193 = i + _tmp192 ;
	i = _tmp193 ;
	Goto _L4 ;
_L5:
	_tmp194 = "\n" ;
	PushParam _tmp194 ;
	LCall _PrintString ;
	PopParams 4 ;
	_tmp195 = 0 ;
	i = _tmp195 ;
_L6:
	_tmp196 = 10 ;
	_tmp197 = 0 ;
	_tmp198 = i == _tmp196 ;
	_tmp199 = _tmp198 == _tmp197 ;
	IfZ _tmp199 Goto _L7 ;
	PushParam i ;
	_tmp200 = *(q) ;
	_tmp201 = *(_tmp200) ;
	_tmp202 = ACall _tmp201 ;
	_tmp203 = q - _tmp202 ;
	_tmp204 = *(_tmp200 + 8) ;
	PushParam _tmp203 ;
	ACall _tmp204 ;
	_tmp205 = 0 ;
	PopParams 8 ;
	_tmp206 = 1 ;
	_tmp207 = i + _tmp206 ;
	i = _tmp207 ;
	Goto _L6 ;
_L7:
	_tmp208 = 0 ;
	i = _tmp208 ;
_L8:
	_tmp209 = 17 ;
	_tmp210 = 0 ;
	_tmp211 = i == _tmp209 ;
	_tmp212 = _tmp211 == _tmp210 ;
	IfZ _tmp212 Goto _L9 ;
	_tmp213 = *(q) ;
	_tmp214 = *(_tmp213) ;
	_tmp215 = ACall _tmp214 ;
	_tmp216 = q - _tmp215 ;
	_tmp217 = *(_tmp213 + 12) ;
	PushParam _tmp216 ;
	_tmp218 = ACall _tmp217 ;
	PopParams 4 ;
	PushParam _tmp218 ;
	LCall _PrintInt ;
	PopParams 4 ;
	_tmp219 = " " ;
	PushParam _tmp219 ;
	LCall _PrintString ;
	PopParams 4 ;
	_tmp220 = 1 ;
	_tmp221 = i + _tmp220 ;
	i = _tmp221 ;
	Goto _L8 ;
_L9:
	_tmp222 = "\n" ;
	PushParam _tmp222 ;
	LCall _PrintString ;
	PopParams 4 ;
	EndFunc ;
