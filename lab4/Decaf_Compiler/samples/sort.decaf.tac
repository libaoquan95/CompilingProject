_offset_myArray_0:
	BeginFunc 4 ;
	_tmp0 = 0 ;
	Return _tmp0 ;
	EndFunc ;
VTable myArray =
	_offset_myArray_0,
	f_myArray.ReadArray,
	f_myArray.Sort,
	f_myArray.PrintArray,
; 
f_myArray.ReadArray:
	BeginFunc 180 ;
	_tmp1 = "How many scores? " ;
	PushParam _tmp1 ;
	LCall _PrintString ;
	PopParams 4 ;
	_tmp2 = LCall _ReadInteger ;
	numScores = _tmp2 ;
	_tmp3 = 0 ;
	_tmp4 = 4 ;
	_tmp5 = _tmp3 < numScores ;
	IfZ _tmp5 Goto _L0 ;
	Goto _L1 ;
_L0:
	_tmp6 = "Decaf runtime error: Array size is <= 0\n" ;
	PushParam _tmp6 ;
	LCall _PrintString ;
	PopParams 4 ;
	LCall _Halt ;
_L1:
	_tmp7 = numScores * _tmp4 ;
	_tmp8 = _tmp7 + _tmp4 ;
	PushParam _tmp8 ;
	_tmp9 = LCall _Alloc ;
	PopParams 4 ;
	*(_tmp9) = numScores ;
	arr = _tmp9 ;
	_tmp10 = 0 ;
	i = _tmp10 ;
_L2:
	_tmp11 = *(arr) ;
	_tmp12 = i < _tmp11 ;
	IfZ _tmp12 Goto _L3 ;
	_tmp13 = "Enter next number: " ;
	PushParam _tmp13 ;
	LCall _PrintString ;
	PopParams 4 ;
	_tmp14 = LCall _ReadInteger ;
	num = _tmp14 ;
	_tmp15 = 0 ;
	_tmp16 = 4 ;
	_tmp17 = *(arr) ;
	_tmp18 = _tmp17 == i ;
	_tmp19 = _tmp17 < i ;
	_tmp20 = _tmp19 || _tmp18 ;
	_tmp21 = i < _tmp15 ;
	_tmp22 = _tmp21 || _tmp20 ;
	IfZ _tmp22 Goto _L4 ;
	_tmp23 = "Decaf runtime error: Array subscript out of bound..." ;
	PushParam _tmp23 ;
	LCall _PrintString ;
	PopParams 4 ;
	LCall _Halt ;
_L4:
	_tmp24 = i * _tmp16 ;
	_tmp25 = _tmp24 + _tmp16 ;
	_tmp26 = arr + _tmp25 ;
	_tmp27 = *(_tmp26) ;
	_tmp28 = 0 ;
	_tmp29 = 4 ;
	_tmp30 = *(arr) ;
	_tmp31 = _tmp30 == i ;
	_tmp32 = _tmp30 < i ;
	_tmp33 = _tmp32 || _tmp31 ;
	_tmp34 = i < _tmp28 ;
	_tmp35 = _tmp34 || _tmp33 ;
	IfZ _tmp35 Goto _L5 ;
	_tmp36 = "Decaf runtime error: Array subscript out of bound..." ;
	PushParam _tmp36 ;
	LCall _PrintString ;
	PopParams 4 ;
	LCall _Halt ;
_L5:
	_tmp37 = i * _tmp29 ;
	_tmp38 = _tmp37 + _tmp29 ;
	_tmp39 = arr + _tmp38 ;
	*(_tmp39) = num ;
	_tmp40 = 1 ;
	_tmp41 = i + _tmp40 ;
	i = _tmp41 ;
	Goto _L2 ;
_L3:
	Return arr ;
	EndFunc ;
f_myArray.Sort:
	BeginFunc 464 ;
	_tmp42 = 1 ;
	i = _tmp42 ;
_L6:
	_tmp43 = *(arr) ;
	_tmp44 = i < _tmp43 ;
	IfZ _tmp44 Goto _L7 ;
	_tmp45 = 1 ;
	_tmp46 = i - _tmp45 ;
	j = _tmp46 ;
	_tmp47 = 0 ;
	_tmp48 = 4 ;
	_tmp49 = *(arr) ;
	_tmp50 = _tmp49 == i ;
	_tmp51 = _tmp49 < i ;
	_tmp52 = _tmp51 || _tmp50 ;
	_tmp53 = i < _tmp47 ;
	_tmp54 = _tmp53 || _tmp52 ;
	IfZ _tmp54 Goto _L8 ;
	_tmp55 = "Decaf runtime error: Array subscript out of bound..." ;
	PushParam _tmp55 ;
	LCall _PrintString ;
	PopParams 4 ;
	LCall _Halt ;
_L8:
	_tmp56 = i * _tmp48 ;
	_tmp57 = _tmp56 + _tmp48 ;
	_tmp58 = arr + _tmp57 ;
	_tmp59 = *(_tmp58) ;
	val = _tmp59 ;
_L9:
	_tmp60 = 0 ;
	_tmp61 = j == _tmp60 ;
	_tmp62 = _tmp60 < j ;
	_tmp63 = _tmp62 || _tmp61 ;
	IfZ _tmp63 Goto _L10 ;
	_tmp64 = 0 ;
	_tmp65 = 4 ;
	_tmp66 = *(arr) ;
	_tmp67 = _tmp66 == j ;
	_tmp68 = _tmp66 < j ;
	_tmp69 = _tmp68 || _tmp67 ;
	_tmp70 = j < _tmp64 ;
	_tmp71 = _tmp70 || _tmp69 ;
	IfZ _tmp71 Goto _L11 ;
	_tmp72 = "Decaf runtime error: Array subscript out of bound..." ;
	PushParam _tmp72 ;
	LCall _PrintString ;
	PopParams 4 ;
	LCall _Halt ;
_L11:
	_tmp73 = j * _tmp65 ;
	_tmp74 = _tmp73 + _tmp65 ;
	_tmp75 = arr + _tmp74 ;
	_tmp76 = *(_tmp75) ;
	_tmp77 = val == _tmp76 ;
	_tmp78 = _tmp76 < val ;
	_tmp79 = _tmp78 || _tmp77 ;
	IfZ _tmp79 Goto _L12 ;
	Goto _L10 ;
_L12:
	_tmp80 = 1 ;
	_tmp81 = j + _tmp80 ;
	_tmp82 = 0 ;
	_tmp83 = 4 ;
	_tmp84 = *(arr) ;
	_tmp85 = _tmp84 == _tmp81 ;
	_tmp86 = _tmp84 < _tmp81 ;
	_tmp87 = _tmp86 || _tmp85 ;
	_tmp88 = _tmp81 < _tmp82 ;
	_tmp89 = _tmp88 || _tmp87 ;
	IfZ _tmp89 Goto _L13 ;
	_tmp90 = "Decaf runtime error: Array subscript out of bound..." ;
	PushParam _tmp90 ;
	LCall _PrintString ;
	PopParams 4 ;
	LCall _Halt ;
_L13:
	_tmp91 = _tmp81 * _tmp83 ;
	_tmp92 = _tmp91 + _tmp83 ;
	_tmp93 = arr + _tmp92 ;
	_tmp94 = *(_tmp93) ;
	_tmp95 = 0 ;
	_tmp96 = 4 ;
	_tmp97 = *(arr) ;
	_tmp98 = _tmp97 == j ;
	_tmp99 = _tmp97 < j ;
	_tmp100 = _tmp99 || _tmp98 ;
	_tmp101 = j < _tmp95 ;
	_tmp102 = _tmp101 || _tmp100 ;
	IfZ _tmp102 Goto _L14 ;
	_tmp103 = "Decaf runtime error: Array subscript out of bound..." ;
	PushParam _tmp103 ;
	LCall _PrintString ;
	PopParams 4 ;
	LCall _Halt ;
_L14:
	_tmp104 = j * _tmp96 ;
	_tmp105 = _tmp104 + _tmp96 ;
	_tmp106 = arr + _tmp105 ;
	_tmp107 = *(_tmp106) ;
	_tmp108 = 1 ;
	_tmp109 = j + _tmp108 ;
	_tmp110 = 0 ;
	_tmp111 = 4 ;
	_tmp112 = *(arr) ;
	_tmp113 = _tmp112 == _tmp109 ;
	_tmp114 = _tmp112 < _tmp109 ;
	_tmp115 = _tmp114 || _tmp113 ;
	_tmp116 = _tmp109 < _tmp110 ;
	_tmp117 = _tmp116 || _tmp115 ;
	IfZ _tmp117 Goto _L15 ;
	_tmp118 = "Decaf runtime error: Array subscript out of bound..." ;
	PushParam _tmp118 ;
	LCall _PrintString ;
	PopParams 4 ;
	LCall _Halt ;
_L15:
	_tmp119 = _tmp109 * _tmp111 ;
	_tmp120 = _tmp119 + _tmp111 ;
	_tmp121 = arr + _tmp120 ;
	*(_tmp121) = _tmp107 ;
	_tmp122 = 1 ;
	_tmp123 = j - _tmp122 ;
	j = _tmp123 ;
	Goto _L9 ;
_L10:
	_tmp124 = 1 ;
	_tmp125 = j + _tmp124 ;
	_tmp126 = 0 ;
	_tmp127 = 4 ;
	_tmp128 = *(arr) ;
	_tmp129 = _tmp128 == _tmp125 ;
	_tmp130 = _tmp128 < _tmp125 ;
	_tmp131 = _tmp130 || _tmp129 ;
	_tmp132 = _tmp125 < _tmp126 ;
	_tmp133 = _tmp132 || _tmp131 ;
	IfZ _tmp133 Goto _L16 ;
	_tmp134 = "Decaf runtime error: Array subscript out of bound..." ;
	PushParam _tmp134 ;
	LCall _PrintString ;
	PopParams 4 ;
	LCall _Halt ;
_L16:
	_tmp135 = _tmp125 * _tmp127 ;
	_tmp136 = _tmp135 + _tmp127 ;
	_tmp137 = arr + _tmp136 ;
	_tmp138 = *(_tmp137) ;
	_tmp139 = 1 ;
	_tmp140 = j + _tmp139 ;
	_tmp141 = 0 ;
	_tmp142 = 4 ;
	_tmp143 = *(arr) ;
	_tmp144 = _tmp143 == _tmp140 ;
	_tmp145 = _tmp143 < _tmp140 ;
	_tmp146 = _tmp145 || _tmp144 ;
	_tmp147 = _tmp140 < _tmp141 ;
	_tmp148 = _tmp147 || _tmp146 ;
	IfZ _tmp148 Goto _L17 ;
	_tmp149 = "Decaf runtime error: Array subscript out of bound..." ;
	PushParam _tmp149 ;
	LCall _PrintString ;
	PopParams 4 ;
	LCall _Halt ;
_L17:
	_tmp150 = _tmp140 * _tmp142 ;
	_tmp151 = _tmp150 + _tmp142 ;
	_tmp152 = arr + _tmp151 ;
	*(_tmp152) = val ;
	_tmp153 = 1 ;
	_tmp154 = i + _tmp153 ;
	i = _tmp154 ;
	Goto _L6 ;
_L7:
	EndFunc ;
f_myArray.PrintArray:
	BeginFunc 88 ;
	_tmp155 = 0 ;
	i = _tmp155 ;
	_tmp156 = "Sorted results: " ;
	PushParam _tmp156 ;
	LCall _PrintString ;
	PopParams 4 ;
_L18:
	_tmp157 = *(arr) ;
	_tmp158 = i < _tmp157 ;
	IfZ _tmp158 Goto _L19 ;
	_tmp159 = 0 ;
	_tmp160 = 4 ;
	_tmp161 = *(arr) ;
	_tmp162 = _tmp161 == i ;
	_tmp163 = _tmp161 < i ;
	_tmp164 = _tmp163 || _tmp162 ;
	_tmp165 = i < _tmp159 ;
	_tmp166 = _tmp165 || _tmp164 ;
	IfZ _tmp166 Goto _L20 ;
	_tmp167 = "Decaf runtime error: Array subscript out of bound..." ;
	PushParam _tmp167 ;
	LCall _PrintString ;
	PopParams 4 ;
	LCall _Halt ;
_L20:
	_tmp168 = i * _tmp160 ;
	_tmp169 = _tmp168 + _tmp160 ;
	_tmp170 = arr + _tmp169 ;
	_tmp171 = *(_tmp170) ;
	PushParam _tmp171 ;
	LCall _PrintInt ;
	PopParams 4 ;
	_tmp172 = " " ;
	PushParam _tmp172 ;
	LCall _PrintString ;
	PopParams 4 ;
	_tmp173 = 1 ;
	_tmp174 = i + _tmp173 ;
	i = _tmp174 ;
	Goto _L18 ;
_L19:
	_tmp175 = "\n" ;
	PushParam _tmp175 ;
	LCall _PrintString ;
	PopParams 4 ;
	EndFunc ;
_offset_main_0:
	BeginFunc 4 ;
	_tmp176 = 0 ;
	Return _tmp176 ;
	EndFunc ;
f_main:
main:
	BeginFunc 100 ;
	_tmp177 = 4 ;
	PushParam _tmp177 ;
	_tmp178 = LCall _Alloc ;
	PopParams 4 ;
	_tmp179 = myArray ;
	*(_tmp178) = _tmp179 ;
	t = _tmp178 ;
	_tmp180 = "\nThis program will read in a bunch of numbers an..." ;
	PushParam _tmp180 ;
	LCall _PrintString ;
	PopParams 4 ;
	_tmp181 = "back out in sorted order.\n\n" ;
	PushParam _tmp181 ;
	LCall _PrintString ;
	PopParams 4 ;
	_tmp182 = *(t) ;
	_tmp183 = *(_tmp182) ;
	_tmp184 = ACall _tmp183 ;
	_tmp185 = t - _tmp184 ;
	_tmp186 = *(_tmp182 + 4) ;
	PushParam _tmp185 ;
	_tmp187 = ACall _tmp186 ;
	PopParams 4 ;
	arr = _tmp187 ;
	PushParam arr ;
	_tmp188 = *(t) ;
	_tmp189 = *(_tmp188) ;
	_tmp190 = ACall _tmp189 ;
	_tmp191 = t - _tmp190 ;
	_tmp192 = *(_tmp188 + 8) ;
	PushParam _tmp191 ;
	ACall _tmp192 ;
	_tmp193 = 0 ;
	PopParams 8 ;
	PushParam arr ;
	_tmp194 = *(t) ;
	_tmp195 = *(_tmp194) ;
	_tmp196 = ACall _tmp195 ;
	_tmp197 = t - _tmp196 ;
	_tmp198 = *(_tmp194 + 12) ;
	PushParam _tmp197 ;
	ACall _tmp198 ;
	_tmp199 = 0 ;
	PopParams 8 ;
	EndFunc ;
